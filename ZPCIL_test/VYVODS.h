#include <iostream>
#include <fstream>
#include <string>
#include <iomanip>
#include <stdlib.h>
#include <stdio.h>
#include <corecrt.h>
#include "ZPGR.h"
#include "ZPRGMS.h"

using namespace std;
extern char IR[20];

extern int IT, IRV, IPR, IE, ISR, IN;
extern float L, WH, N1R;      // ресурс, часов
extern float T1R, TMAX;     // момент на входящем валу, Нм
extern float TQ[20], TC[20], RM[20];

extern fstream f_1;    // файл для результата    //***

//========== Переменные по ступени
extern int IVP;                             // тип ступени
extern float Z1, Z2;                        // числа зубьев шестерни и колеса
extern float MN, BE, X1, X2;                // модуль, угол наклона, коэффициенты смещения
extern int flaw;
extern float AW, B1, B2;                    // межосевое расстояние ширины шестерни и колеса
extern float AL, HA, HL, CZV;               // угол профиля, коэффициенты: высоты головки, граничной высоты, радиального зазора  
extern int IST1, IST2, IST3, IST4, IST5;    // степени точности по нормам: кинематики, плавности, контакта; вид сопряжения, вид допуска на боковой зазор
extern int IMD, IKG;                        // коэф. наличия массивных деталей, номер схемы по упрощенному методу
extern float SHLM1, SHPM1, SFLB1, SFPM1;    // шестерня: предел конт. выносливости, допуск. конт. напряжение при макс. нагрузке, баз. предел выносл-и при изгибе, предел. баз. напряжение изгиба при макс. нагрузке 
extern float SHLM2, SHPM2, SFLB2, SFPM2;    // колесо:   - " -    - " -    - " -    - " -
extern int IG1, IG2;                        // группы материала шестерни и колеса
extern float H1, HK1, HT1, SHER1, YZ1;      // шестерня: твердость поверхности, твердость сердцевины, толщина упрочненного слоя, шероховатость, коэф. способа получения заготовки
extern float YT1, YR1, SHV1;                // шестерня: технологический коэффициент, шероховатость переходной поверхности, коэф. запаса прочности
extern float H2, HK2, HT2, SHER2, YZ2;      // колесо: твердость поверхности, твердость сердцевины, толщина упрочненного слоя, шероховатость, коэф. способа получения заготовки
extern float YT2, YR2, SHV2;                // колесо: технологический коэффициент, шероховатость переходной поверхности, коэф. запаса прочности
extern int IMF1, IMF2, IVR;                 // признаки шлифования переходной поверхности шестерни и колеса, Признак задания коэф-та запаса по контактной выносливости
extern float CZ1, CZ2, KSP, KPD, PR;        // числа зацеплений за оборот шестерни и колеса, коэф. силового потока, КПД, вероятность неразрушения по изгибной выносливости
extern float LO, S1, FKE, GM;               // расстояние между опорами, расстояние от опоры со стороны подвода момента до центра шестерни, ?, ?
extern int IQ, IP, IZ1, IG;                 // тип приложения момента, тип подшипника, ?, ?
extern float GRM;
extern int SEC;

extern fstream f_1;    // файл для результата    //***

void  VYVODS()
{
    fstream fi;     // файл для чтения
    int IS = 0;
    string KM[2] = { "НЕТ", "ЕСТЬ" };
    string KPM[2] = { "ОДНО", "ДВУХ" };
    string KT[6] = { " - A", " - B", " - C", " - D", " - E", " - H" };
    char KT5[8] = { 'x', 'y', 'z', 'a', 'b', 'c', 'd', 'h'};
    string IE2[2]{ " MПа     ", "кгс/кв.мм" };
    int I2 = 0;
    if (IE == 2) I2 = 1;

    cout << "VYVODS" << endl;

    //------------ - Прочесть номер текущей ступени--------------

    fi.open("NOMST.DAT", fstream::in);
    fi >> IS;
    fi.close();

    f_1 << "\n\n                " << IS << " - Я  СТУПЕНЬ \n";
    f_1 << "\n" << " ( ЦИЛИНДРИЧЕСКАЯ ЭВОЛЬВЕНТНАЯ ПЕРЕДАЧА ВНЕШНЕГО ЗАЦЕПЛЕНИЯ )\n";
    f_1 << "\n     ИСХОДНЫЕ ДАННЫЕ ДЛЯ СТУПЕНИ\n\n";
    f_1 << "                                            ЗУБЧАТОЕ КОЛЕСО\n";
    f_1 << "                                            ВЕДУЩЕЕ  ВЕДОМОЕ\n";
    f_1 << "\nЧИСЛО ЗУБЬЕВ                           Z " << setw(9) << Z1 << setw(9) << Z2 << endl;
    f_1 << "МОДУЛЬ                                MN " << setw(13) << MN << endl;
    
    BE = ZPGR(BE); // преобразование в радианы
    ZPRGMS(BE, GRM, SEC);
    f_1 << "УГОЛ НАКЛОНА ЗУБА (ГРАД.МИН.СЕК)      BE " << setprecision(2) << fixed << setw(12) << GRM << ".";
    if (SEC < 10) f_1 << "0" << SEC << endl;
    else f_1 << SEC << endl;
    if(AW == 0)
    f_1 << "КОЭФФИЦИЕНТЫ СМЕЩЕНИЯ                  X " << setw(9) << X1 << setw(9) << X2 << endl;
    if(AW != 0)
    f_1 << "МЕЖОСЕВОЕ РАССТОЯНИЕ                  AW " << setprecision(1) << fixed << setw(13) << AW << endl;

    f_1 << "ШИРИНА ЗУБЧАТОГО ВЕНЦА                 B " << setw(9) << B1 << setw(9) << B2 << endl;
    //f_1 << "КОЭФФ. ВЫСОТЫ ГОЛОВКИ ЗУБА            HA " << setw(13) << HA << endl;
    f_1 << "НАЛИЧИЕ МОДИФИКАЦИИ ГОЛОВКИ ЗУБА     IMD " << setw(13) << KM[IMD] << endl;  //IM не равно IMD !!! где задается IM ?????
    if(IST1 == IST2 && IST1 == IST3)
    f_1 << "СТЕПЕНЬ ТОЧНОСТИ ПО ГОСТ 1643-81     IST " << setw(8) << IST1 << KT[IST4-1] << " - " << KT5[IST5-1] << endl;
    else
    f_1 << "СТЕПЕНЬ ТОЧНОСТИ ПО ГОСТ 1643-81     IST " << setw(8) << IST1 << " - " << IST2 << " - " << IST3 << KT[IST4-1] << " - " << KT5[IST5-1] << endl;

    if (IMD == 0 && HA == 1 && AL == 20)
        f_1 << "ИСХОДНЫЙ КОНТУР ПО ГОСТ 13755-81\n(БЕЗ МОДИФИКАЦИИ ПРОФИЛЯ)";

    if (IMD != 0 && HA == 1 && AL == 20)
        f_1 << "ИСХОДНЫЙ КОНТУР ПО ГОСТ 13755-81";

    AL = ZPGR(AL); // преобразование в радианы
    ZPRGMS(AL,GRM,SEC);

    cout << "VYVODS: GRM = " << GRM << "   SEC = " << SEC;

    if (HA != 1 || GRM != 20 || CZV != 0.2 || IPR >= 6) {
        f_1 << "\nПАРАМЕТРЫ ИСХОДНОГО КОНТУРА" << "\nalfa = " << setprecision(2) << fixed << GRM << ".";
        if (SEC < 10) f_1 << "0" << SEC;
        else f_1 << SEC;
        f_1 << "    ha* = " << HA << "    hl* = " << HL << "    c* = " << CZV << endl;
    }
    if (L != 0)   // L = 0 если нет расчета на прочность (только геометрия)
    {
        f_1 << "ПРИЗНАК РАСПОЛОЖЕНИЯ \nЗУБЧАТЫХ КОЛЕС                       IKG " << setw(13) << IKG;
        
        if (IKG == 0)
        {
            f_1 << "\nОТКЛОНЕНИЕ ПОЛОЖЕНИЯ \nКОНТАКТНЫХ ЛИНИЙ                     FKE " << setw(13) << FKE;
            f_1 << "\nПРИЗНАК РАСПОЛОЖЕНИЯ ШЕСТЕРНИ          IZ1     " << IZ1;
        }
        if (IKG == 10)
        {
            f_1 << "\nНОМЕР СХЕМЫ ПО ТАБЛ.16 ГОСТ            IG      " << IG;
            f_1 << "\nПРИЛОЖЕНИЕ МОМЕНТА                     IQ      " << IQ << "   " << KPM[IP] << "СТОРОННЕЕ";
            //           f_1 << "\n  1 - одностороннее \n -1 - двухстороннее ";

            f_1 << "\nТИП ПОДШИПНИКА                         IP      " << IP;
            f_1 << "\n 0 - подшипник скольжения \n 1 - шариковый \n 2 - роликовый";

            f_1 << "\nРАССТОЯНИЕ МЕЖДУ ОПОРАМИ               L0      " << LO;
            f_1 << "\nРАССТОЯНИЕ ОТ ОПОРЫ СО СТОРОНЫ \nПОДВОДА МОМЕНТА ДО СЕРЕДИНЫ \nШЕСТЕРНИ                               S1      " << S1;
        }
            f_1 << "\nЧИСЛО ЗАЦЕПЛЕНИЙ ЗА ОБОРОТ            CZ " << setprecision(0) << fixed << setw(9) << CZ1 << setw(9) << CZ2;
            if (GM > 0) f_1 << "\nПРИЗНАК НАЛИЧИЯ МАССИВНЫХ ДЕТЕЛЕЙ      GM " << setw(13) << GM;
            f_1 << "\nПРИЗНАК ЗАДАНИЯ КОЭФФИЦИЕНТА ЗАПАСА          ";
            f_1 << "\nПРОЧНОСТИ ПО КОНТАКТНОЙ ВЫНОСЛИВ.     IVR " << setw(12) << IVR << endl;

         /*
            0 - пpинимается по табл. 11, п.2 ГOCT
            1 - вводятся дополнительно SHV1, SHV2
            2 - SH1, SH2 и вероятности неразруш. - определяются в программе
                при IVR = 2 PR = 0. и вычисляется в программе
         */
             if (PR > 0)
            f_1 << "ВЕРОЯТНОСТЬ НЕРАЗРУШЕНИЯ   " << endl;
            f_1 << "ПО ИЗГИБНОЙ ВЫНОСЛИВ.                  PR " << setprecision(3) << fixed << setw(14) << PR << endl;

            f_1 << "КОЭФФИЦИЕНТ ПОЛЕЗНОГО ДЕЙСТВИЯ        KPD " << setw(14) << KPD << endl;
            f_1 << "КОЭФФИЦИЕНТ СИЛОВОГО ПОТОКА           KSP " << setw(14) << KSP << endl;

            f_1 << "\nНОМЕР ГРУППЫ МАТЕРИАЛА                 IG " << setw(8) << IG1 << setw(9) << IG2;
            f_1 << "\nТВЕРДОСТЬ ПОВЕРХНОСТИ                   H " << setprecision(1) << fixed << setw(9) << H1 << setw(9) << H2;
            f_1 << "\nТВЕРДОСТЬ СЕРДЦЕВИНЫ                   HK " << setw(9) << HK1 << setw(9) << HK2;
            f_1 << "\nТОЛЩИНА УПРОЧНЕННОГО СЛОЯ              HT " << setprecision(3) << fixed << setw(9) << HT1 << setw(9) << HT2;
            f_1 << "\nШЕРОХОВАТОСТЬ ПОВЕРХНОСТИ ЗУБА       SHER " << setw(9) << SHER1 << setw(9) << SHER2;
            f_1 << "\nКОЭФФ. СПОСОБА ПОЛУЧЕНИЯ ЗАГОТОВКИ     YZ " << setw(9) << YZ1 << setw(9) << YZ2;
            f_1 << "\nТЕХНОЛОГИЧЕСКИЙ КОЭФФИЦИЕНТ            YT " << setw(9) << YT1 << setw(9) << YT2;

            f_1 << "\nКОЭФФИЦИЕНТЫ ШЕРОХОВАТОСТИ    ";
            f_1 << "\nПЕРЕХОДНОЙ ПОВЕРХНОСТИ                 YR " << setw(9) << YR1 << setw(9) << YR2;
            if (IMF1 != 0 || IMF2 != 0) {
                f_1 << "\nПРИЗНАК НАЛИЧИЯ ШЛИФОВАНИЯ    ";
                f_1 << "\nПЕРЕХОДНОЙ ПОВЕРХНОСТИ                 IMF " << setw(9) << IMF1 << setw(9) << IMF2;
            }
            if (IVR == 1) {
                f_1 << "\nЗАДАВАЕМЫЙ КОЭФ. ЗАПАСА ПРОЧНОСТИ    ";
                f_1 << "\nПО КОНТАКТНОЙ ВЫНОСЛИВОСТИ             SHV " << setw(9) << SHV1 << setw(9) << SHV2;
            }
            if (SHLM1 > 0 || SHLM2 > 0) {
                f_1 << "\nДОПУСКАЕМOЕ КОНТАКТНОЕ НАПРЯЖЕНИE    ";
                f_1 << "\nПРИ МАКСИМАЛЬНОЙ НАГРУЗКЕ " << IE2[I2] << "    SGHPM " << setw(9) << SHPM1 << setw(9) << SHPM2;
            }
            if (SFLB1 > 0 || SFLB2 > 0) {
                f_1 << "\nБАЗОВЫЙ ПРЕДЕЛ ВЫНОСЛИВОСТИ    ";
                f_1 << "\nЗУБЬЕВ ПРИ ИЗГИБЕ         " << IE2[I2] << "    SGFLB   " << SFLB1 << setw(9) << SFLB2;
            }
            if (SFPM1 > 0 || SFPM2 > 0) {
                f_1 << "\nДОПУСКАЕМOЕ НАПРЯЖЕНИЕ ПРИ ИЗГИБЕ    ";
                f_1 << "\nЗУБА МАКСИМАЛЬНОЙ НАГРУЗКОЙ " << IE2[I2] << "  SGFPM   " << SFPM1 << setw(9) << SFPM2;
            }
            if (IE == 2) {
                SHLM1 = static_cast<float>(SHLM1 * 9.81);
                SHLM2 = static_cast<float>(SHLM2 * 9.81);
                SHPM1 = static_cast<float>(SHPM1 * 9.81);
                SHPM2 = static_cast<float>(SHPM2 * 9.81);
                SFLB1 = static_cast<float>(SFLB1 * 9.81);
                SFLB2 = static_cast<float>(SFLB2 * 9.81);
                SFPM1 = static_cast<float>(SFPM1 * 9.81);
                SFPM2 = static_cast<float>(SFPM2 * 9.81);
            }
            if (IPR >=3 ) f_1 << "\n___________________";
        
    }
 /*



 */
}

/*
        SUBROUTINE VYVODS
     * (IVP,L,WH,IS,IR,IPR,IE,ISR,KPD,KSP,
     * Z1,Z2,MN,BE,X1,X2,AW,B1,B2,AL,HA,HL,CZV,IMD,IST1,IST2,
     * IST3,IST4,IST5,IKG,FKE,IZ1,IG,IQ,IP,LO,S1,CZ1,CZ2,GM,
     * IVR,PR,
     *    SHLM1,SHLM2,SHPM1,SHPM2,SFLB1,SFLB2,SFPM1,SFPM2,
     *    IG1,H1,HK1,HT1,SHER1,YZ1,YT1,YR1,IMF1,SHV1,
     *    IG2,H2,HK2,HT2,SHER2,YZ2,YT2,YR2,IMF2,SHV2)
C                                                               C
C  вывод исходн.дан. по ступеням pедуктоpа (в цикле)            C
C                                                               C
       CHARACTER*16 IR
       CHARACTER*4 KTS
       CHARACTER*3 KT(6)
       CHARACTER*1 KT5(8)
       CHARACTER*4 KM(2),KPM(2)
       CHARACTER*10 KP(3)
       CHARACTER*9 IE2(2)
       REAL MN
       REAL L
       REAL LO
       REAL KPD
       REAL KSP
        SAVE
      DATA KT/'- A','- B','- C','- D','- E','- H'/
      DATA KT5/'x','y','z','a','b','c','d','h'/
      DATA KM/'ЕСТЬ','НЕТ '/
      DATA KPM/'ОДНО','ДВУХ'/
      DATA KP/'СКОЛЬЖЕНИЯ','РОЛИКОВЫЙ ',
     * 'ШАРИКОВЫЙ '/
      DATA IE2/' MПа     ','кгс/кв.мм'/
      I2 =1
      IF(IE.EQ.2) I2 =2
        KTS=KT(IST4)
    IF(IST5.EQ.8.AND.(IST4.EQ.5.OR.IST4.EQ.6)) GO TO 5
       IF(IST5.NE.(IST4+3)) KTS=KT(IST4)//KT5(IST5)
    5 CONTINUE
      IM=1
      IF(IMD.EQ.0) IM=2
      IPM=1
      IF(IQ.EQ.-1) IPM=2
       IF(IP-1) 10,11,12
   10 IP1=1
      GOTO 13
   11 IP1=3
      GOTO 13
   12 IP1=2
   13   WRITE(1,106) IS
  106 FORMAT(/20X,I2,' - Я  СТУПЕНЬ '//
     * 9X,'( ЦИЛИНДРИЧЕСКАЯ ЭВОЛЬВЕНТНАЯ ПЕРЕДАЧА '/
     * 9X,'          ВНЕШНЕГО ЗАЦЕПЛЕНИЯ )'/)
        WRITE(1,107)
  107 FORMAT(5X,'ИСХОДНЫЕ ДАННЫЕ ДЛЯ СТУПЕНИ'/
     * 46X,'ЗУБЧАТОЕ КОЛЕСО'/
     * 46X,'ВЕДУЩЕЕ  ВЕДОМОЕ'/)
        CALL ZPGR(BE)
        CALL ZPRGMS(BE,GRM,SEC)
        WRITE(1,108) Z1,Z2,MN,GRM,SEC
  108 FORMAT(
     *   ' ЧИСЛО ЗУБЬЕВ                         Z    ',2F8.0/
     *   ' МОДУЛЬ                               MN   ',F13.3/
     *   ' УГОЛ НАКЛОНА ЗУБА (ГРАД.МИН.СЕК)     BE   ',F12.2,F3.2)
        IF(AW.EQ.0.) WRITE(1,114) X1,X2
  114 FORMAT(
     *   ' КОЭФФИЦИЕНТЫ СМЕЩЕНИЯ                X    ',F12.4,F8.4)
      IF(AW.NE.0.) WRITE(1,109) AW
  109 FORMAT(
     *   ' МЕЖОСЕВОЕ РАССТОЯНИЕ                 AW   ',F11.1)
        WRITE(1,110) B1,B2,KM(IM)
  110 FORMAT(
     *   ' ШИРИНА ЗУБЧАТОГО ВЕНЦА               B    ',F9.1,F8.1/
C    *   ' КОЭФФ. ВЫСОТЫ ГОЛОВКИ ЗУБА           HA   ',F12.2/
     *   ' НАЛИЧИЕ МОДИФИКАЦИИ ГОЛОВКИ ЗУБА     IMD  ',8X,A4)
      IF((IST1-IST2)+(IST1-IST3))7,8,7
    7 WRITE(1,116) IST1,IST2,IST3,KTS
  116 FORMAT(
     *   ' СТЕПЕНЬ ТОЧНОСТИ ПО ГОСТ 1643-81     IST  ',4X,
     *I2,'-',I2,'-',I2,A4)
      GOTO 9
    8 WRITE(1,117) IST1,KTS
  117 FORMAT(
     *   ' СТЕПЕНЬ ТОЧНОСТИ ПО ГОСТ 1643-81     IST  ',8X,I2,A4)
    9 CONTINUE
      IF(IMD.EQ.0.AND.HA.EQ.1.AND.AL.EQ.20.0) WRITE(1,212)
  212 FORMAT(
     *   ' ИСХОДНЫЙ КОНТУР ПО ГОСТ 13755-81'/
     *   ' (БЕЗ МОДИФИКАЦИИ ПРОФИЛЯ)')
      IF(IMD.NE.0.AND.HA.EQ.1.AND.AL.EQ.20.0) WRITE(1,213)
  213 FORMAT(
     *   ' ИСХОДНЫЙ КОНТУР ПО ГОСТ 13755-81')
       CALL ZPGR(AL)
       CALL ZPRGMS(AL,GRM,SEC)
C       HL=2.*HA
      IF(HA.NE.1..OR.GRM.NE.20..OR.CZV.NE.0.2.OR.IPR.GE.6)
     * WRITE(1,214) GRM,SEC,HA,HL,CZV
  214 FORMAT(
     *   ' ПАРАМЕТРЫ ИСХОДНОГО КОНТУРА:'/
     *   ' alfa = ',F5.2,F3.2,', ha* = ',F5.2,
     *   ', hl* = ',F5.2,', c* = ',F5.2)
           IF(L.EQ.0.) RETURN
       WRITE(1,215) IKG
  215 FORMAT(
     *   ' ПРИЗНАК РАСПОЛОЖЕНИЯ  '/
     *   ' ЗУБЧАТЫХ КОЛЕС                       IKG  ',I10)
C                                                              C
C  пpи  IKG=0 вводятся дополнительно:                          C
C                                                              C
      IF(IKG.EQ.0) WRITE(1,200) FKE,IZ1
  200 FORMAT(
     *   ' ОТКЛОНЕНИЕ ПОЛОЖЕНИЯ  '/
     *   ' КОНТАКТНЫХ ЛИНИЙ                     FKE  ',F13.3/
     *   ' ПРИЗНАК РАСПОЛОЖЕНИЯ ШЕСТЕРНИ        IZ1  ',I10)
C                                                              C
C  пpи  IKG=10 вводятся дополнительно:                         C
C                                                              C
      IF(IKG.EQ.10) WRITE(1,201) IG,KPM(IPM),
     *  KP(IP1),LO,S1
  201 FORMAT(
     *   ' НОМЕР СХЕМЫ ПО ТАБЛ.16 ГОСТ          IG   ',I10/
     *   ' ПРИЛОЖЕНИЕ МОМЕНТА                   IQ     ',A4,'СТОРОННЕЕ'/
C    1 - одностоpоннее
C   -1 - двухстоpоннее
     *   ' ТИП ПОДШИПНИКА                       IP     ',A10/
C    0 - подшипник сколжения
C    1 -           шаpиковый
C    2 -           pоликовый
     *   ' РАССТОЯНИЕ МЕЖДУ ОПОРАМИ             LO   ',F12.2/
     *   ' РАССТОЯНИЕ ОТ ОПОРЫ СО СТОРОНЫ'/
     *   ' ПОДВОДА МОМЕНТА ДО СЕРЕДИНЫ '/
     *   ' ШЕСТЕРНИ                             S1   ',F12.2)
        WRITE(1,111) CZ1,CZ2
  111 FORMAT(
     *   ' ЧИСЛО ЗАЦЕПЛЕНИЙ ЗА ОБОРОТ           CZ   ',F8.0,F9.0)
        IF(GM.GT.0.) WRITE(1,1110) GM
 1110 FORMAT(
     *   ' ПРИЗНАК НАЛИЧИЯ МАССИВНЫХ ДЕТЕЛЕЙ    GM   ',F11.1)
         WRITE(1,1111) IVR
 1111 FORMAT(
     *   ' ПРИЗНАК ЗАДАНИЯ КОЭФФИЦИЕНТА ЗАПАСА '/
     *   ' ПРОЧНОСТИ ПО КОНТАКТНОЙ ВЫНОСЛИВ.    IVR   ',I10)
C    0 - пpинимается по табл. 11, п.2 ГOCT
C    1 - вводятся дополнительно SHV1,SHV2
C    2 - SH1,SH2 и вероятности неразруш.-определяются в программе
C  при IVR=2 PR=0. и вычисляется в программе
         IF(PR.GT.0.) WRITE(1,1112) PR
 1112 FORMAT(
     *   ' ВЕРОЯТНОСТЬ НЕРАЗРУШЕНИЯ'/
     *   ' ПО ИЗГИБНОЙ ВЫНОСЛИВОСТИ             PR   ',F13.3)
        WRITE(1,1113) KPD,KSP
 1113 FORMAT(
     *   ' КОЭФФИЦИЕНТ ПОЛЕЗНОГО ДЕЙСТВИЯ       KPD  ',F13.3/
     *   ' КОЭФФИЦИЕНТ СИЛОВОГО ПОТОКА          KSP  ',F13.3/)
        WRITE(1,112) IG1,IG2,H1,H2,HK1,HK2
  112 FORMAT(
     *   ' НОМЕР ГРУППЫ МАТЕРИАЛА               IG   ',I7,I8/
     *   ' ТВЕРДОСТЬ ПОВЕРХНОСТИ                H    ',2F9.1/
     *   ' ТВЕРДОСТЬ СЕРДЦЕВИНЫ                 HK   ',2F9.1)
        IF(HT1.NE.0..OR.HT2.NE.0.) WRITE(1,1120) HT1,HT2
 1120 FORMAT(
     *   ' ТОЛЩИНА УПРОЧНЕННОГО СЛОЯ            HT   ',2F9.3)
        WRITE(1,1121) SHER1,SHER2,YZ1,YZ2,YT1,YT2,YR1,YR2
 1121 FORMAT(
     *   ' ШЕРОХОВАТОСТЬ ПОВЕРХНОСТИ ЗУБА       SHER ',2F9.3/
     *   ' КОЭФФ. СПОСОБА ПОЛУЧЕНИЯ ЗАГОТОВКИ   YZ   ',2F9.3/
     *   ' ТЕХНОЛОГИЧЕСКИЙ КОЭФФИЦИЕНТ          YT   ',2F9.3/
     *   ' КОЭФФИЦИЕНТЫ ШЕРОХОВАТОСТИ'/
     *   ' ПЕРЕХОДНОЙ ПОВЕРХНОСТИ               YR   ',2F9.3)
       IF(IMF1.NE.0.OR.IMF2.NE.0)  WRITE(1,1122) IMF1,IMF2
 1122 FORMAT(
     *   ' ПРИЗНАК НАЛИЧИЯ ШЛИФОВАНИЯ'/
     *   ' ПЕРЕХОДНОЙ ПОВЕРХНОСТИ               IMF  ',I7,I8)
       IF(IVR.EQ.1) WRITE(1,113) SHV1,SHV2
  113 FORMAT(
     *   ' ЗАДАВАЕМЫЙ КОЭФ. ЗАПАСА ПРОЧНОСТИ'/
     *   ' ПО КОНТАКТНОЙ ВЫНОСЛИВОСТИ           SHV  ',2F9.3)
      IF(SHLM1.GT.0..OR.SHLM2.GT.0.) WRITE(1,1114) IE2(I2),SHLM1,SHLM2
 1114  FORMAT(
     *   ' ПРЕДЕЛ КОНТАКТНОЙ '/
     *   ' ВЫНОСЛИВОСТИ, ',A9,'              SGHLM ',2F8.0)
      IF(SHPM1.GT.0..OR.SHPM2.GT.0.)
     * WRITE(1,1115) IE2(I2),SHPM1,SHPM2
 1115  FORMAT(
     *   ' ДОПУСКАЕМOЕ КОНТАКТНОЕ НАПРЯЖЕНИE'/
     *   ' ПРИ МАКСИМАЛЬНОЙ НАГРУЗКЕ,',A9,'  SGHPM ',2F8.0)
      IF(SFLB1.GT.0..OR.SFLB2.GT.0.) WRITE(1,1116) IE2(I2),SFLB1,SFLB2
 1116  FORMAT(
     *   ' БАЗОВЫЙ ПРЕДЕЛ ВЫНОСЛИВОСТИ'/
     *   ' ЗУБЬЕВ ПРИ ИЗГИБЕ, ',A9,'         SGFLB ',2F8.0)
      IF(SFPM1.GT.0..OR.SFPM2.GT.0.)
     * WRITE(1,1117) IE2(I2),SFPM1,SFPM2
 1117  FORMAT(
     *   ' ДОПУСКАЕМOЕ НАПРЯЖЕНИЕ ПРИ ИЗГИБЕ'/
     *   ' ЗУБА МАКСИМАЛЬНОЙ НАГРУЗКОЙ,',A9,'SGFPM ',2F8.0)
      IF(IE.NE.2) GOTO 1000
      SHLM1 =SHLM1 *9.81
      SHLM2 =SHLM2 *9.81
      SHPM1 =SHPM1 *9.81
      SHPM2 =SHPM2 *9.81
      SFLB1 =SFLB1 *9.81
      SFLB2 =SFLB2 *9.81
      SFPM1 =SFPM1 *9.81
      SFPM2 =SFPM2 *9.81
 1000   IF(IPR.GE.3) WRITE(1,300)
  300 FORMAT(' __________ ')
      RETURN
      END


*/